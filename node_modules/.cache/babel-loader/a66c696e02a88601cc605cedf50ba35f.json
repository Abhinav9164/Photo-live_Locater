{"ast":null,"code":"var _jsxFileName = \"/home/abhinav/Desktop/Live-Photo sharer/src/places/pages/UserPlaces.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../,./shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedplaces] = useState();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  useEffect(() => {\n    const fetchplaces = async () => {\n      try {\n        const responseData = await sendRequest(`http:localhost:5000/api/places/user/${userId}`);\n        setLoadedplaces(responseData.places);\n      } catch (err) {}\n    };\n\n    fetchplaces();\n  }, [sendRequest, userId]);\n  return /*#__PURE__*/React.createElement(PlaceList, {\n    items: loadedPlaces,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default UserPlaces;","map":{"version":3,"names":["React","useEffect","useState","useParams","PlaceList","ErrorModal","LoadingSpinner","useHttpClient","UserPlaces","loadedPlaces","setLoadedplaces","isLoading","error","sendRequest","clearError","fetchplaces","responseData","userId","places","err"],"sources":["/home/abhinav/Desktop/Live-Photo sharer/src/places/pages/UserPlaces.js"],"sourcesContent":["import React, {useEffect,useState} from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../,./shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {useHttpClient} from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\nconst [loadedPlaces,setLoadedplaces] = useState();\nconst {isLoading,error,sendRequest,clearError} = useHttpClient();\n\nuseEffect(() =>{\n const  fetchplaces = async () =>{\n\ntry{\nconst responseData = await sendRequest(`http:localhost:5000/api/places/user/${userId}`);\nsetLoadedplaces(responseData.places);\n}\ncatch(err){}\n };\n fetchplaces();\n},[sendRequest,userId])\n\n\n  ;\n  return <PlaceList items={loadedPlaces} />;\n};\n\nexport default UserPlaces;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAAQC,aAAR,QAA4B,8BAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAM;EACzB,MAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCR,QAAQ,EAA/C;EACA,MAAM;IAACS,SAAD;IAAWC,KAAX;IAAiBC,WAAjB;IAA6BC;EAA7B,IAA2CP,aAAa,EAA9D;EAEAN,SAAS,CAAC,MAAK;IACd,MAAOc,WAAW,GAAG,YAAW;MAEjC,IAAG;QACH,MAAMC,YAAY,GAAG,MAAMH,WAAW,CAAE,uCAAsCI,MAAO,EAA/C,CAAtC;QACAP,eAAe,CAACM,YAAY,CAACE,MAAd,CAAf;MACC,CAHD,CAIA,OAAMC,GAAN,EAAU,CAAE;IACV,CAPD;;IAQAJ,WAAW;EACX,CAVQ,EAUP,CAACF,WAAD,EAAaI,MAAb,CAVO,CAAT;EAcE,oBAAO,oBAAC,SAAD;IAAW,KAAK,EAAER,YAAlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAP;AACD,CAnBD;;AAqBA,eAAeD,UAAf"},"metadata":{},"sourceType":"module"}