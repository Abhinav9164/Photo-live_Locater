{"ast":null,"code":"var _jsxFileName = \"/home/abhinav/Desktop/Live-Photo sharer/src/user/pages/Users.js\";\nimport React, { useEffect, useState } from 'react';\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hook/http-hook';\n\nconst Users = () => {\n  const {\n    isLoading,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5055/api/users');\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, []);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), !isLoading && loadedUsers && /*#__PURE__*/React.createElement(UsersList, {\n    items: loadedUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }\n  }));\n};\n\nexport default Users;","map":{"version":3,"names":["React","useEffect","useState","UsersList","ErrorModal","LoadingSpinner","useHttpClient","Users","isLoading","sendRequest","clearError","loadedUsers","setLoadedUsers","setIsLoading","response","fetch","responseData","json","ok","Error","message","users","err","setError","errorHandler","error"],"sources":["/home/abhinav/Desktop/Live-Photo sharer/src/user/pages/Users.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {useHttpClient} from '../../shared/hook/http-hook';\n\nconst Users = () => {\n\n  const {isLoading,sendRequest,clearError}  = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch('http://localhost:5055/api/users');\n\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n    sendRequest();\n  }, []);\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={errorHandler} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAAQC,aAAR,QAA4B,6BAA5B;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAElB,MAAM;IAACC,SAAD;IAAWC,WAAX;IAAuBC;EAAvB,IAAsCJ,aAAa,EAAzD;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAG,YAAY;MAC9BI,YAAY,CAAC,IAAD,CAAZ;;MACA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;QAEA,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;QAEA,IAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;UAChB,MAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;QACD;;QAEDR,cAAc,CAACI,YAAY,CAACK,KAAd,CAAd;MACD,CAVD,CAUE,OAAOC,GAAP,EAAY;QACZC,QAAQ,CAACD,GAAG,CAACF,OAAL,CAAR;MACD;;MACDP,YAAY,CAAC,KAAD,CAAZ;IACD,CAhBD;;IAiBAJ,WAAW;EACZ,CAnBQ,EAmBN,EAnBM,CAAT;;EAqBA,MAAMe,YAAY,GAAG,MAAM;IACzBD,QAAQ,CAAC,IAAD,CAAR;EACD,CAFD;;EAIA,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,UAAD;IAAY,KAAK,EAAEE,KAAnB;IAA0B,OAAO,EAAED,YAAnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAEGhB,SAAS,iBACR;IAAK,SAAS,EAAC,QAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,cAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAHJ,EAOG,CAACA,SAAD,IAAcG,WAAd,iBAA6B,oBAAC,SAAD;IAAW,KAAK,EAAEA,WAAlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPhC,CADF;AAWD,CAzCD;;AA2CA,eAAeJ,KAAf"},"metadata":{},"sourceType":"module"}