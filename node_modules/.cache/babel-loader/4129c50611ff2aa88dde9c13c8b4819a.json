{"ast":null,"code":"var _jsxFileName = \"/home/abhinav/Desktop/Live-Photo sharer/src/user/pages/auth.js\";\nimport React, { useState, useContext } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined,\n        image: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        },\n        image: {\n          value: null,\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest('http://localhost:5000/api/users/login', 'POST', JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.user.id);\n      } catch (err) {}\n    } else {\n      try {\n        const responseData = await sendRequest('http://localhost:5000/api/users/signup', 'POST', JSON.stringify({\n          name: formState.inputs.name.value,\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.user.id);\n      } catch (err) {}\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Login Required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), !isLoginMode && /*#__PURE__*/React.createElement(ImageUpload, {\n    center: true,\n    id: \"image\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please enter a valid password, at least 6 characters.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN')));\n};\n\nexport default Auth;","map":{"version":3,"names":["React","useState","useContext","Card","Input","Button","ErrorModal","LoadingSpinner","ImageUpload","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","useHttpClient","AuthContext","Auth","auth","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","image","prevMode","authSubmitHandler","event","preventDefault","console","log","responseData","JSON","stringify","login","user","id","err"],"sources":["/home/abhinav/Desktop/Live-Photo sharer/src/user/pages/auth.js"],"sourcesContent":["import React, { useState,useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    console.log(formState.inputs);\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          'http://localhost:5000/api/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.user.id);\n      } catch (err) {}\n    } else {\n      try {\n        const responseData = await sendRequest(\n          'http://localhost:5000/api/users/signup',\n          'POST',\n          JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n\n        auth.login(responseData.user.id);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload center id=\"image\" onInput={inputHandler} />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}