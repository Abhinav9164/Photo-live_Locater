{"ast":null,"code":"var _jsxFileName = \"/home/abhinav/Desktop/Live-Photo sharer/src/places/pages/NewPlace.js\";\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    },\n    image: {\n      value: null,\n      isValid: false\n    }\n  }, false);\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', formState.inputs.title.value);\n    formData.append('description', formState.inputs.description.value);\n    formData.append('address', formState.inputs.address.value);\n    formData.append('creator', auth.userId);\n\n    try {\n      await sendRequest('http://localhost:5000/api/places', 'POST', JSON.stringify({\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value,\n        address: formState.inputs.address.value,\n        creator: auth.userId\n      }), {\n        'Content-Type': 'application/json'\n      });\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"address\",\n    element: \"input\",\n    label: \"Address\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ImageUpload, {\n    id: \"image\",\n    onInput: inputHandler,\n    errorText: \"Provide image!!!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"ADD PLACE\")));\n};\n\nexport default NewPlace;","map":{"version":3,"names":["React","useContext","useHistory","Input","Button","ErrorModal","LoadingSpinner","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","useHttpClient","AuthContext","NewPlace","auth","isLoading","error","sendRequest","clearError","formState","inputHandler","title","value","isValid","description","address","image","history","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","userId","JSON","stringify","creator","push","err"],"sources":["/home/abhinav/Desktop/Live-Photo sharer/src/places/pages/NewPlace.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image:{\n        value:null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n\nconst formData = new FormData();\nformData.append('title',formState.inputs.title.value);\nformData.append('description',formState.inputs.description.value);\nformData.append('address',formState.inputs.address.value);\nformData.append('creator',auth.userId);\n\n    try {\n      await sendRequest(\n        'http://localhost:5000/api/places',\n        'POST',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n          address: formState.inputs.address.value,\n          creator: auth.userId\n        }),\n        { 'Content-Type': 'application/json' }\n      );\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n\n        <ImageUpload\n        id=\"image\"\n        onInput={inputHandler}\n        errorText=\"Provide image!!!\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}